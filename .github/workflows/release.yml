name: Build Release Binaries

on:
  push:
    tags:
      - '*'

jobs:
  create-linux-package:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    name: Create Deb Package
    steps:
      # Setup Java environment for the next steps
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 18

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v2.3.1

      # 设置工作目录
      - name: Set working directory
        run: |
          cd ${{ github.workspace }}

      # Build Desktop Uber Jar application
      - name: Desktop Uber Jar
        run: ./gradlew packageUberJarForCurrentOS

      # Build Desktop Packaged application
      - name: Desktop App Package
        run: ./gradlew packageDeb

      # Create a Draft Release
      - name: Draft Release
        uses: ncipollo/release-action@v1
        with:
          draft: false
          allowUpdates: true
          generateReleaseNotes: true  #自动生成发行说明。
          tag: "${{ github.ref_name }}"
          artifacts: "${{ github.workspace }}/build/compose/jars/*.jar,${{ github.workspace }}/build/compose/binaries/main/deb/*.deb"
          token: ${{ secrets.GITHUB_TOKEN  }}

  # Windows Package
  create-win-package:
    runs-on: windows-latest
    permissions:
      contents: write
    name: Create Windows Package
    steps:
      # Setup Java environment for the next steps
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 18

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v2.3.1

      # 设置工作目录
      - name: Set working directory
        run: |
          echo '${{ github.workspace }}'
          

      # Build Desktop Uber Jar application
      - name: Desktop Uber Jar
        run: |
          cd "${{ github.workspace }}"
          ./gradlew packageUberJarForCurrentOS

      # Build Desktop Packaged application
      - name: Desktop App Package
        run: |
          cd "${{ github.workspace }}"
          ./gradlew packageMsi

      # Create a Draft Release
      - name: Draft Release
        uses: ncipollo/release-action@v1
        with:
          draft: false
          allowUpdates: true
          generateReleaseNotes: true  #自动生成发行说明。
          tag: "${{ github.ref_name }}"
          artifacts: "${{ github.workspace }}/build/compose/jars/*.jar,${{ github.workspace }}/build/compose/binaries/main/msi/*.msi"
          token: ${{ secrets.GITHUB_TOKEN  }}


  create-mac-package:
    runs-on: macos-latest
    permissions:
      contents: write
    name: Create Mac Package
    steps:
      # Setup Java environment for the next steps
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 18

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v2.3.1

      # Build Desktop Uber Jar application
      - name: Desktop Uber Jar
        run: ./gradlew packageUberJarForCurrentOS

      # Build Desktop Packaged application
      - name: Desktop App Package
        run: ./gradlew packageDmg

      # Create a Draft Release
      - name: Draft Release
        uses: ncipollo/release-action@v1
        with:
          draft: false
          allowUpdates: true
          generateReleaseNotes: true  #自动生成发行说明。
          tag: "${{ github.ref_name }}"
          artifacts: "${{ github.workspace }}/build/compose/jars/*.jar,${{ github.workspace }}/build/compose/binaries/main/dmg/*.dmg"
          token: ${{ secrets.GITHUB_TOKEN  }}
